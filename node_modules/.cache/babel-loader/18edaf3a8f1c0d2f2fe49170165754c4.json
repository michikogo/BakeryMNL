{"ast":null,"code":"var _jsxFileName = \"F:\\\\GitHub\\\\BakeryMNL\\\\src\\\\Pages\\\\Order\\\\Components\\\\CartList.js\",\n    _s = $RefreshSig$();\n\nimport \"../index.css\";\nimport { Table } from \"react-bootstrap\";\nimport { useState } from \"react\";\nimport CartSingleItem from \"./CartSingleItem\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Cart = ({\n  cart\n}) => {\n  _s();\n\n  let amount = 0;\n  const [total, setTotal] = useState(0);\n\n  const computeTotal = price => {\n    amount = amount + price;\n    setTotal(amount);\n  }; // console.log(cart);\n\n\n  return /*#__PURE__*/_jsxDEV(Table, {\n    responsive: true,\n    children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n      children: /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [/*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"Product\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          className: \"order-table-textAlign\",\n          children: \"Price\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          className: \"order-table-textAlign\",\n          children: \"Quantity\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          className: \"order-table-textAlign\",\n          children: \"Total\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n      children: [cart.length !== 0 ? cart.map(data =>\n      /*#__PURE__*/\n      // Reference the function to child\n      _jsxDEV(CartSingleItem, {\n        data: data,\n        computeTotal: computeTotal\n      }, data.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 13\n      }, this)) :\n      /*#__PURE__*/\n      // NO ITEMS IN DB\n      _jsxDEV(\"tr\", {\n        className: \"order-textAlign\",\n        children: /*#__PURE__*/_jsxDEV(\"td\", {\n          colSpan: \"5\",\n          className: \"order-empty\",\n          children: \"Cart is Empty\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n        className: \"order-textAlign\",\n        children: [/*#__PURE__*/_jsxDEV(\"td\", {\n          colSpan: \"4\",\n          className: \"order-total\",\n          children: \"Total\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          className: \"order-verticalAlign\",\n          children: [\"\\u20B1\", total]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Cart, \"YrYAKhMVdpUi2JZbV3/SqAFSKPg=\");\n\n_c = Cart;\nexport default Cart;\n\nvar _c;\n\n$RefreshReg$(_c, \"Cart\");","map":{"version":3,"sources":["F:/GitHub/BakeryMNL/src/Pages/Order/Components/CartList.js"],"names":["Table","useState","CartSingleItem","Cart","cart","amount","total","setTotal","computeTotal","price","length","map","data","id"],"mappings":";;;AAAA,OAAO,cAAP;AACA,SAASA,KAAT,QAAsB,iBAAtB;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,OAAOC,cAAP,MAA2B,kBAA3B;;;AAEA,MAAMC,IAAI,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAc;AAAA;;AACzB,MAAIC,MAAM,GAAG,CAAb;AACA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,CAAC,CAAD,CAAlC;;AAEA,QAAMO,YAAY,GAAIC,KAAD,IAAW;AAC9BJ,IAAAA,MAAM,GAAGA,MAAM,GAAGI,KAAlB;AACAF,IAAAA,QAAQ,CAACF,MAAD,CAAR;AACD,GAHD,CAJyB,CAQzB;;;AACA,sBACE,QAAC,KAAD;AAAO,IAAA,UAAU,MAAjB;AAAA,4BACE;AAAA,6BAEE;AAAA,gCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAA;AAAA;AAAA;AAAA,gBAFF,eAGE;AAAI,UAAA,SAAS,EAAC,uBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHF,eAIE;AAAI,UAAA,SAAS,EAAC,uBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJF,eAKE;AAAI,UAAA,SAAS,EAAC,uBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBALF;AAAA;AAAA;AAAA;AAAA;AAAA;AAFF;AAAA;AAAA;AAAA;AAAA,YADF,eAWE;AAAA,iBAEGD,IAAI,CAACM,MAAL,KAAgB,CAAhB,GACCN,IAAI,CAACO,GAAL,CAAUC,IAAD;AAAA;AACP;AACA,cAAC,cAAD;AAEE,QAAA,IAAI,EAAEA,IAFR;AAGE,QAAA,YAAY,EAAEJ;AAHhB,SACOI,IAAI,CAACC,EADZ;AAAA;AAAA;AAAA;AAAA,cAFF,CADD;AAAA;AAUC;AACA;AAAI,QAAA,SAAS,EAAC,iBAAd;AAAA,+BACE;AAAI,UAAA,OAAO,EAAC,GAAZ;AAAgB,UAAA,SAAS,EAAC,aAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAbJ,eAoBE;AAAI,QAAA,SAAS,EAAC,iBAAd;AAAA,gCACE;AAAI,UAAA,OAAO,EAAC,GAAZ;AAAgB,UAAA,SAAS,EAAC,aAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAIE;AAAI,UAAA,SAAS,EAAC,qBAAd;AAAA,+BAAsCP,KAAtC;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJF;AAAA;AAAA;AAAA;AAAA;AAAA,cApBF;AAAA;AAAA;AAAA;AAAA;AAAA,YAXF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAyCD,CAlDD;;GAAMH,I;;KAAAA,I;AAoDN,eAAeA,IAAf","sourcesContent":["import \"../index.css\";\r\nimport { Table } from \"react-bootstrap\";\r\nimport { useState } from \"react\";\r\nimport CartSingleItem from \"./CartSingleItem\";\r\n\r\nconst Cart = ({ cart }) => {\r\n  let amount = 0;\r\n  const [total, setTotal] = useState(0);\r\n\r\n  const computeTotal = (price) => {\r\n    amount = amount + price;\r\n    setTotal(amount);\r\n  };\r\n  // console.log(cart);\r\n  return (\r\n    <Table responsive>\r\n      <thead>\r\n        {/* HEADER */}\r\n        <tr>\r\n          <th>Product</th>\r\n          <th></th>\r\n          <th className=\"order-table-textAlign\">Price</th>\r\n          <th className=\"order-table-textAlign\">Quantity</th>\r\n          <th className=\"order-table-textAlign\">Total</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        {/* GET CONTENTS FROM DB */}\r\n        {cart.length !== 0 ? (\r\n          cart.map((data) => (\r\n            // Reference the function to child\r\n            <CartSingleItem\r\n              key={data.id}\r\n              data={data}\r\n              computeTotal={computeTotal}\r\n            />\r\n          ))\r\n        ) : (\r\n          // NO ITEMS IN DB\r\n          <tr className=\"order-textAlign\">\r\n            <td colSpan=\"5\" className=\"order-empty\">\r\n              Cart is Empty\r\n            </td>\r\n          </tr>\r\n        )}\r\n        {/* SHOW TOTAL */}\r\n        <tr className=\"order-textAlign\">\r\n          <td colSpan=\"4\" className=\"order-total\">\r\n            Total\r\n          </td>\r\n          <td className=\"order-verticalAlign\">â‚±{total}</td>\r\n        </tr>\r\n      </tbody>\r\n    </Table>\r\n  );\r\n};\r\n\r\nexport default Cart;\r\n"]},"metadata":{},"sourceType":"module"}